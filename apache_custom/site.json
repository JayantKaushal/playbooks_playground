[
    {
        "become": true, 
        "tasks": [
            {
                "when": "ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'", 
                "name": "install apache2", 
                "apt": "name=apache2 update_cache=yes state=latest"
            }, 
            {
                "apache2_module": "name=rewrite state=present", 
                "when": "ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'", 
                "name": "enabled mod_rewrite", 
                "notify": [
                    "restart apache2"
                ]
            }, 
            {
                "lineinfile": "dest=/etc/apache2/ports.conf regexp=\"^Listen \" line=\"Listen {{ http_port }}\" state=present", 
                "when": "ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'", 
                "name": "apache2 listen on port {{ http_port }}", 
                "notify": [
                    "restart apache2"
                ]
            }, 
            {
                "lineinfile": "dest=/etc/apache2/sites-available/000-default.conf regexp=\"^<VirtualHost \\*:\" line=\"<VirtualHost *:{{ http_port }}>\"", 
                "when": "ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'", 
                "name": "apache2 virtualhost on port {{ http_port }}", 
                "notify": [
                    "restart apache2"
                ]
            }, 
            {
                "yum": "name=httpd", 
                "when": "ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'", 
                "name": "Install the httpd rpm"
            }, 
            {
                "lineinfile": "dest=/etc/selinux/config  regexp=\"^SELINUX=enforcing\" line=\"SELINUX=disabled\" state=present", 
                "when": "ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'", 
                "name": "Disable SELINUX", 
                "notify": [
                    "restart httpd"
                ]
            }, 
            {
                "command": "setenforce 0", 
                "when": "ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'", 
                "name": "Turning off SELiniux"
            }, 
            {
                "lineinfile": "dest=/etc/httpd/conf/httpd.conf regexp=\"^Listen \" line=\"Listen {{ http_port }}\" state=present", 
                "when": "ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'", 
                "name": "http listen on port for centos {{ http_port }}", 
                "notify": [
                    "restart httpd"
                ]
            }, 
            {
                "when": "ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'", 
                "name": "start the httpd service", 
                "service": "name=httpd state=started"
            }, 
            {
                "yum": "name=firewalld update_cache=yes state=latest", 
                "when": "ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'", 
                "name": "install firewalld"
            }, 
            {
                "when": "ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'", 
                "name": "restart the firewalld service after opening port {{http_port}}", 
                "service": "name=firewalld state=restarted"
            }, 
            {
                "command": "sudo firewall-cmd --zone=public --add-port={{ http_port }}/tcp --permanent", 
                "when": "ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'", 
                "name": "Open port {{ http_port }}"
            }, 
            {
                "when": "ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'", 
                "name": "start the firewalld service", 
                "service": "name=firewalld state=restarted"
            }, 
            {
                "setup": {
                    "filter": "ansible_default_ipv4.address", 
                    "fact_path": "/tmp/test"
                }, 
                "name": "Gather facts from new server"
            }
        ], 
        "hosts": "all", 
        "vars": {
            "http_port": 80
        }, 
        "handlers": [
            {
                "name": "restart apache2", 
                "service": "name=apache2 state=restarted"
            }, 
            {
                "name": "restart httpd", 
                "service": "name=httpd state=restarted"
            }
        ]
    }
]